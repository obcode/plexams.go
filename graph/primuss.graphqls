type PrimussExam {
  ancode: Int!
  module: String!
  mainExamer: String!
  program: String!
  examType: String!
  presence: String!
  studentRegs: [StudentReg!]!
  conflicts: Conflicts!
}

input PrimussExamInput {
  ancode: Int!
  program: String!
}

type PrimussExamByProgram {
  program: String!
  exams: [PrimussExam!]!
}

type StudentReg {
  mtknr: String!
  ancode: Int!
  program: String!
  group: String!
  name: String!
  presence: String!
}

type Conflicts {
  ancode: Int!
  module: String!
  mainExamer: String!
  conflicts: [Conflict!]!
}

type Conflict {
  ancode: Int!
  numberOfStuds: Int!
}

type ConflictPerProgram {
  program: String!
  conflics: [Conflict!]!
}

type ConnectedExam {
  zpaExam: ZPAExam!
  primussExams: [PrimussExam!]!
  otherPrimussExams: [PrimussExam!]!
  errors: [String!]!
}
