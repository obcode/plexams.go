extend type Query {
  primussExams: [PrimussExamByProgram]
}

type PrimussExam {
  ancode: Int!
  module: String!
  mainExamer: String!
  program: String!
  examType: String!
  presence: String!
}

type EnhancedPrimussExam {
  exam: PrimussExam!
  studentRegs: [StudentReg!]!
  conflicts: [Conflict!]!
  ntas: [NTA!]!
}

type PrimussExamWithCount {
  ancode: Int!
  module: String!
  mainExamer: String!
  program: String!
  examType: String!
  presence: String!
  studentRegsCount: Int!
}

type PrimussExamByProgram {
  program: String!
  exams: [PrimussExamWithCount!]!
}

type PrimussExamAncode {
  ancode: Int!
  program: String!
  numberOfStuds: Int!
}

input PrimussExamInput {
  ancode: Int!
  program: String!
}

type StudentReg {
  mtknr: String!
  ancode: Int!
  program: String!
  group: String!
  name: String!
  presence: String!
}

type Conflicts {
  ancode: Int!
  module: String!
  mainExamer: String!
  conflicts: [Conflict!]!
}

type Conflict {
  ancode: Int!
  numberOfStuds: Int!
}

type ConflictPerProgram {
  program: String!
  conflicts: [Conflict!]!
}

type ConflictsPerProgramAncode {
  program: String!
  ancode: Int!
  conflicts: Conflicts
}
