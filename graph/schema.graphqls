type Semester {
  id: String!
}

type Teacher {
  shortname: String!
  fullname: String!
  isProf: Boolean!
  isLBA: Boolean!
  isProfHC: Boolean!
  isStaff: Boolean!
  lastSemester: String!
  fk: String!
  id: Int!
  email: String!
}

type ZPAExam {
  semester: String!
  anCode: Int!
  module: String!
  mainExamer: String!
  mainExamerID: Int!
  examType: String!
  duration: Int!
  isRepeaterExam: Boolean!
  groups: [String!]!
}

type ZPAExamsForType {
  type: String!
  exams: [ZPAExam!]!
}

type PrimussExam {
  anCode: Int!
  module: String!
  mainExamer: String!
  group: String!
  examType: String!
  presence: String!
}

type PrimussExamByGroup {
  group: String!
  exams: [PrimussExam!]!
}

type Query {
  allSemesterNames: [Semester!]!
  semester: Semester!
  # ZPA
  teachers(fromZPA: Boolean): [Teacher!]!
  invigilators: [Teacher!]!
  zpaExams(fromZPA: Boolean): [ZPAExam!]!
  zpaExamsByType: [ZPAExamsForType!]!
  # Primuss
  primussExams: [PrimussExamByGroup]
}

type Mutation {
  setSemester(input: String!): Semester!
}
